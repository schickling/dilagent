source_up

# In CI, direnv should fail on errors to catch issues early; locally, it shouldn't, so the rest of the environment still loads
CI=${CI:-0}
if [ "${CI}" = "1" ] || [ "${CI}" = "true" ] || [ "${CI}" = "yes" ]; then
  strict_env
fi

export WORKSPACE_ROOT=$(pwd)

# Add dilagent CLI to PATH for local development
export PATH="$WORKSPACE_ROOT/scripts/bin:$PATH"

# For convenience we're also exposing executables from node_modules/.bin e.g. `biome`, `tsc`
export PATH="$WORKSPACE_ROOT/node_modules/.bin:$PATH"

export DILAGENT_CLI_PATH="$WORKSPACE_ROOT/apps/dilagent-cli/src/main.ts"

# Disable Node.js experimental warnings
export NODE_OPTIONS="--disable-warning=ExperimentalWarning"

# Load local environment variables if they exist (for sensitive data)
if test -f ./.envrc.local; then
  source_env ./.envrc.local
fi

# Nix flake support (if available)
if command -v nix-shell &> /dev/null && test -f ./flake.nix; then
  use_flake
fi